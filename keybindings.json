// 将键绑定放在此文件中以覆盖默认值auto[]
[
  // my config
  // gitlens begin
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  // gitlens end
  // editor：选中当前词并跳到下一个当前词
  // {
  //   "key": "cmd+k cmd+d",
  //   "command": "editor.action.moveSelectionToNextFindMatch",
  //   "when": "editorFocus"
  // },
  // editor：替换当前行和上一行
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // editor：替换当前行和下一行
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // editor：将当前标签移动到左边一组标签
  {
    "key": "cmd+shift+, cmd+shift+,",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  // editor：将当前标签移动到右边一组标签
  {
    "key": "cmd+shift+. cmd+shift+.",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  // 创建新终端
  {
    "key": "shift+cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  // 终端：垂直方向聚焦到上一组
  {
    "key": "shift+cmd+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // 终端：垂直方向聚焦到下一组
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // 终端：水平方向聚焦到上一个终端
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 终端：水平方向聚焦到下一个终端
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 终端：大小往下拉伸
  {
    "key": "ctrl+cmd+j",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 终端：大小往上拉伸
  {
    "key": "ctrl+cmd+k",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 终端：大小往左拉伸
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 终端：大小往右拉伸
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 文件：新建
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  // 文件：重命名
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // 文件：删除
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+;",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  // {
  //   "key": "shift+cmd+e",
  //   "command": "workbench.view.explorer",
  //   "when": "viewContainer.workbench.view.explorer.enabled"
  // },
  // {
  //   "key": "shift+cmd+e",
  //   "command": "-workbench.view.explorer",
  //   "when": "viewContainer.workbench.view.explorer.enabled"
  // },

  // setting default
  {
    "key": "cmd+r",
    "command": "vite.open"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "shift+cmd+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+cmd+h",
    "command": "-rest-client.history"
  },
  {
    "key": "ctrl+f",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+cmd+f",
    "command": "-workbench.action.toggleFullScreen",
    "when": "!isIOS"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  }
]
