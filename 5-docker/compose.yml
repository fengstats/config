# docker compose 版本
version: '3.7'

services:
  # 服务名称
  mysql:
    # 镜像
    image: mysql:8.0
    # docker 重启后容器也跟着重启
    restart: always
    # 构建容器后所执行的命令
    command:
      # 服务器加了个更广泛的字符编码和表情符号，在 my.cnf 可覆盖
      # --character-set-server=utf8mb4 
      # --collation-server=utf8mb4_unicode_ci
      # --lower-case-table-names=1 # NOTE: 忽略数据表名大小写：该属性只有初始化构建时才生效，my.cnf 无法覆盖，必须重新配置 mysql 服务
    # 端口映射
    ports:
      - 3306:3306
    # 卷体积映射：docker compose 的好处就是可以使用相对路径
    volumes:
      # 配置文件：需要本地目录存在这个文件
      - ./mysql/conf/my.cnf:/etc/my.cnf
      # 数据目录：本地存在目录即可
      - ./mysql/data:/var/lib/mysql
    # 环境变量
    environment:
      # 用户密码
      MYSQL_USER: ${MYSQL_ROOT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # 时区
      TZ: Asia/Shanghai
  srs:
    image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:5
    restart: always
    command: 
      ./objs/srs -c conf/rtc2rtmp.conf
    ports:
      - 8080:8080 
      - 1935:1935
      - 1985:1985
      - 8000:8000/udp
    volumes:
      # 这里直接 volume 名字即可
      - srs_conf:/usr/local/srs/conf
      - srs_objs:/usr/local/srs/objs

# 在 docker run 命令使用 Docker 内的 Volumes 时 Dokcer 会自动创建好
# 但在 compose 内不行，要先在顶层先定义 volumes 名称用于创建
volumes:
  srs_conf:
  srs_objs:
