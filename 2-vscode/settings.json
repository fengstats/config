{
  // Basic
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmPasteNative": false,
  "explorer.openEditors.visible": 20,
  "explorer.confirmDelete": false,
  "breadcrumbs.icons": false,
  "security.workspace.trust.untrustedFiles": "open",
  "files.eol": "\n",
  "files.autoSave": "off",
  // 是否在尾部插入一个新行
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": false,
  "files.associations": {
    ".zimrc": "shellscript",
    // "*.json": "jsonc",
    "*.conf": "plaintext"
  },

  // Search
  "search.smartCase": true,
  "search.collapseResults": "auto",
  "search.seedOnFocus": true,
  "search.showLineNumbers": true,
  "search.useGlobalIgnoreFiles": true,
  "search.useParentIgnoreFiles": true,
  "search.quickAccess.preserveInput": true,
  "search.searchEditor.defaultNumberOfContextLines": null,
  "search.searchEditor.singleClickBehaviour": "peekDefinition",
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },

  // Sundial
  "workbench.preferredLightColorTheme": "Default Light Modern",
  "workbench.preferredDarkColorTheme": "Default Dark+",
  "workbench.colorTheme": "Default Dark+",
  "sundial.sunrise": "07:00",
  "sundial.sunset": "17:00",
  "sundial.interval": 20,
  // "Color": "#0000008f",
  // "sundial.daySettings": {
  //   "animations.CursorAnimationOptions": {
  //     "Color": "#d484818f"
  //   }
  // },
  // "sundial.nightSettings": {
  //   "animations.CursorAnimationOptions": {
  //     "Color": "#ffffff4f"
  //   }
  // },

  // Window
  "window.dialogStyle": "custom",
  "window.newWindowDimensions": "offset",
  "window.zoomLevel": 1,
  "window.commandCenter": false,
  "window.confirmBeforeClose": "keyboardOnly",
  "workbench.activityBar.location": "top",
  "workbench.tree.indent": 10,
  "workbench.tree.enableStickyScroll": true,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none",
  "workbench.productIconTheme": "icons-carbon",
  "workbench.list.smoothScrolling": true,
  "workbench.editor.pinnedTabsOnSeparateRow": true,
  "workbench.editor.focusRecentEditorAfterClose": false,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.limit.value": 12,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.enabled": true,
  "workbench.commandPalette.experimental.suggestCommands": true,
  // 自动恢复上次使用过的命令
  // "workbench.commandPalette.preserveInput": true,
  // 字体像素级和次像素级平滑
  // "workbench.fontAliasing": "antialiased",
  "workbench.colorCustomizations": {
    // 终端提示命令
    "terminal.ansiBrightBlack": "#0000008f",
    // "editor.lineHighlightBackground": "#ffffff00",
    // 底部控制栏
    "statusBar.background": "#3333338f",
    "[Maple Dark]": {
      "editorCursor.background": "#ffffff",
      "editor.selectionHighlightBackground": "#8adcf14f"
    },
    "[Default Dark+][GitHub Dark Classic]": {
      "terminal.ansiBlue": "#8adcf1",
      "terminal.ansiRed": "#ff6b81",
      "terminal.ansiBrightRed": "#ff7675"
    }
  },

  // Editor
  "fonted.font": "Arial",
  "editor.fontSize": 14,
  "editor.lineNumbers": "interval",
  "editor.lineHeight": 1.45,
  "editor.fontFamily": "Input Mono, monospace",
  // "editor.fontFamily": "Maple Mono SC NF, monospace",
  // "editor.fontFamily": "JetBrains Mono, monospace",
  // "editor.fontFamily": "Monaco, monospace",
  // "editor.fontFamily": "Liga SFMono Nerd Font, monospace",
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'ss12', 'ss13'",
  "editor.cursorSurroundingLines": 5,
  "editor.accessibilitySupport": "auto",
  "editor.renderLineHighlight": "all",
  "editor.cursorBlinking": "expand",
  "editor.cursorSmoothCaretAnimation": "on",
  // 配置选中文本时的截断分隔符
  "editor.wordSeparators": "`~!@%^&*()=+[{]}\\|;:'\",.<>/?（），。；：_-",
  // 不好用，输入比较快的时候就抽风了
  "editor.linkedEditing": false,
  // TODO: 关闭缩进猜测
  "editor.detectIndentation": false,
  "editor.tabSize": 2,
  // auto close brackets
  "editor.autoClosingBrackets": "beforeWhitespace",
  "editor.autoClosingDelete": "always",
  "editor.autoClosingOvertype": "always",
  "editor.autoClosingQuotes": "beforeWhitespace",
  // smart suggest
  "editor.suggest.snippetsPreventQuickSuggestions": true,
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.inlineSuggest.showToolbar": "always",
  "editor.hover.above": false,
  "editor.hover.delay": 220,
  "editor.hover.hidingDelay": 0,
  "editor.padding.top": 2,
  "editor.smoothScrolling": true,
  // TODO: 父级代码吸附置顶，显示嵌套作用域
  "editor.stickyScroll.enabled": false,
  "editor.stickyScroll.scrollWithEditor": false,
  "editor.scrollbar.ignoreHorizontalScrollbarInContentHeight": true,
  "editor.scrollbar.horizontalScrollbarSize": 6,
  "editor.scrollbar.verticalScrollbarSize": 24,
  "editor.scrollBeyondLastLine": true,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "editor.minimap.size": "fit",
  "editor.minimap.maxColumn": 60,
  // bracket pair color
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "editor.unicodeHighlight.allowedLocales": {
    "zh-hant": true
  },
  "editor.semanticTokenColorCustomizations": {
    "enabled": true
  },
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit"
  },
  "editor.tokenColorCustomizations": {
    // "[Default Light Modern][Moegi Light Vitesse]": { "comments": "#95a5a6" },
    "[Fleet Dark Modern][Fleet Dark][Fleet Ocean][Maple Dark]": {
      "comments": "#a1a7a1df"
    },
    "[Default Light Modern][Moegi Light]": {
      "comments": "#218c74"
    },
    "[Evondev Dracula Darker Contrast]": {
      "comments": "#95a5a6"
    },
    "[GitHub Dark Classic][Atom One Dark]": {
      "comments": "#95a5a6"
    },
    "[Default Dark+]": {
      "comments": "#adb5ad"
    },
    "[Moegi Dark Vitesse]": {
      "comments": "#a1a7a1"
    },
    "[Maple Dark]": {
      "textMateRules": [
        // 重置斜体关键字
        {
          "scope": [
            // import/export/for/if/for/while/continue/break/switch/return
            "keyword.control",
            // function/let/const
            "storage.type",
            // async/await
            "storage.modifier",
            // this
            "variable.language.this"
            // 下面这个 scope 选择器貌似没起作用
            // "keyword.function"
          ],
          "settings": {
            "fontStyle": ""
          }
        },
        // 去除无效值的删除线
        {
          "scope": "invalid",
          "settings": {
            "fontStyle": ""
          }
        }
      ]
    },
    // 一般的斜体矫正
    "textMateRules": [
      {
        "name": "Comment Italics",
        "scope": ["comment.line.double-slash", "comment.block.documentation"],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },

  // Terminal
  "terminal.external.osxExec": "iTerm",
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.lineHeight": 1.1,
  "terminal.integrated.confirmOnKill": "never",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.fontFamily": "Maple Mono SC NF Freeze, JetBrains Mono, Monaco, Input Mono Freeze, Hack Nerd Font Mono, monospace",
  "terminal.integrated.tabs.defaultColor": "terminal.ansiGreen",
  "terminal.integrated.tabs.defaultIcon": "terminal-bash",
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1",
    "NO_COLOR": null
  },

  // Formatter
  "editor.formatOnSave": true,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  "prettier.proseWrap": "preserve",
  "prettier.printWidth": 100,
  "formatFiles.excludedFolders": [
    "node_modules",
    ".vscode",
    ".git",
    "dist",
    ".chrome",
    "attachments"
  ],
  "formatFiles.extensionsToInclude": ".md",
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown][jsonc][javascript][typescript][vue][html][css][less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact][typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[handlebars]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },

  // Vue
  "vue.inlayHints.missingProps": true,
  "vue.autoInsert.dotValue": true,

  // JS/TS 关闭验证，用 quick-lint-js 看看
  "typescript.validate.enable": true,
  "javascript.validate.enable": false,

  // DEBUG
  "debug.javascript.autoAttachFilter": "onlyWithFlag",

  // CSS
  "css.lint.duplicateProperties": "warning",
  "less.lint.duplicateProperties": "warning",
  "scss.lint.duplicateProperties": "warning",
  "css.lint.unknownAtRules": "ignore",
  "scss.lint.unknownAtRules": "ignore",
  "tailwindMagic.variantGroup": true,

  // Vim
  "vim.leader": "<space>",
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.foldfix": true,
  "vim.easymotion": false,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 100,
  "vim.highlightedyank.color": "#00000000",
  "vim.highlightedyank.textColor": "white",
  "vim.flash.enable": true,
  // Vimium-C
  // "vim.flash.labels": "sadjklewcmpgho",
  // mini.jump2d
  // "vim.flash.labels": "abcdefghijklmnopqrstuvwxyz",
  // hop.nvim
  "vim.flash.labels": "etovxqpdygfblzhckisuran",
  "vim.flash.marker.nextMatchBackgroundColor": "#fdff6c",
  "vim.flash.marker.backgroundColor": "#3eb370",
  "vim.operatorPendingModeKeyBindings": [
    { "before": ["H"], "after": ["^"] },
    { "before": ["L"], "after": ["g", "_"] }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // 还原原生的 f 命令
    // 设置 fash.nvim 查找键
    { "before": ["f"], "after": ["\\"] },
    { "before": ["s"], "after": ["f"] },
    { "before": ["`"], "after": ["S", "`", "e"] },
    { "before": ["\""], "after": ["S", "\"", "e"] },
    { "before": ["'"], "after": ["S", "'", "e"] },
    { "before": ["("], "after": ["S", ")", "e"] },
    { "before": ["p"], "after": ["p", "g", "v", "y"] },
    { "before": ["j"], "after": ["g", "j"] },
    { "before": ["k"], "after": ["g", "k"] },
    { "before": ["J"], "after": ["4", "j"] },
    { "before": ["K"], "after": ["4", "k"] },
    { "before": ["H"], "after": ["^"] },
    { "before": ["L"], "after": ["g", "_"] },
    { "before": ["g", "h"], "commands": ["editor.action.showHover"] },
    { "before": ["leader", "i", "w"], "after": ["V", "$", "%", "o"] },
    { "before": ["leader", "d", "f"], "after": ["V", "$", "%", "d"] }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // NOTE: 会覆盖原生的 Ctrl+D 命令，修复 Ctrl+D/U 在顶部代码折叠后失效 + 遇到折叠代码自动展开的问题
    { "before": ["<C-d>"], "after": ["2", "2", "g", "j", "z", "z"] },
    { "before": ["<C-u>"], "after": ["2", "2", "g", "k", "z", "z"] },
    // 通过 matchit 插件代替原生 % 功能，匹配范围更精确且支持匹配 html 标签
    { "before": ["s"], "commands": ["extension.matchitJumpItems"] },
    { "before": ["f"], "after": ["\\"] },
    { "before": [";"], "after": ["f"] },
    { "before": ["="], "after": ["<C-a>"] },
    { "before": ["-"], "after": ["<C-x>"] },
    { "before": ["j"], "after": ["g", "j"] },
    { "before": ["k"], "after": ["g", "k"] },
    { "before": ["J"], "after": ["4", "g", "j"] },
    { "before": ["K"], "after": ["4", "g", "k"] },
    { "before": ["H"], "after": ["^"] },
    { "before": ["L"], "after": ["g", "_"] },
    { "before": ["U"], "after": ["<C-r>"] },
    { "before": ["n"], "after": ["n", "z", "z"] },
    { "before": ["N"], "after": ["N", "z", "z"] },
    { "before": ["["], "after": ["{"] },
    { "before": ["]"], "after": ["}"] },
    // 解决按快了没
    { "before": ["v", "w"], "after": ["v", "i", "w"] },
    { "before": [",", ","], "after": ["A", ",", "esc"] },
    { "before": ["`", "`"], "after": ["v", "i", "w", "S", "`", "e", "l"] },
    { "before": ["'", "'"], "after": ["v", "i", "w", "S", "'", "e", "l"] },
    { "before": ["\"", "\""], "after": ["v", "i", "w", "S", "\"", "e", "l"] },
    { "before": ["g", "r"], "commands": ["editor.action.goToReferences"] },
    { "before": ["z", "C"], "commands": ["editor.foldAll"] },
    { "before": ["z", "O"], "commands": ["editor.unfoldAll"] },
    { "before": ["leader", ";"], "commands": [":noh"] },
    { "before": ["leader", "o"], "commands": ["extension.toggleBool"] },
    { "before": ["leader", "l"], "commands": ["workbench.action.toggleAuxiliaryBar"] },
    { "before": ["leader", "e"], "commands": ["workbench.action.toggleSidebarVisibility"] },
    { "before": ["leader", "q"], "commands": ["workbench.action.closeActiveEditor"] },
    { "before": ["leader", "w"], "commands": ["workbench.action.files.saveWithoutFormatting"] },
    { "before": ["leader", "["], "after": ["[", "{"] },
    { "before": ["leader", "]"], "after": ["]", "}"] },
    { "before": ["leader", "r", "n"], "commands": ["editor.action.rename"] },
    { "before": ["leader", "i", "w"], "after": ["V", "$", "%", "o"] },
    { "before": ["leader", "i", "y"], "after": ["V", "$", "%", "o", "y"] },
    { "before": ["leader", "d", "f"], "after": ["V", "$", "%", "o", "d"] }
  ],

  // Git
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.openRepositoryInParentFolders": "never",
  "git.ignoreRebaseWarning": true,
  "git.autoStash": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.hideUnchangedRegions.enabled": true,
  "scm.showActionButton": false,
  "scm.showInputActionButton": false,
  "scm.diffDecorationsGutterPattern": {
    "modified": false
  },

  // GitLens
  "gitlens.plusFeatures.enabled": false,
  "gitlens.graph.minimap.enabled": false,
  "githubPullRequests.pullBranch": "never",

  // FittenCode
  "fittencode.inlineCompletion.enable": true,
  "fittencode.languagePreference.displayPreference": "zh-cn",
  "fittencode.languagePreference.commentPreference": "zh-cn",

  // Markdown
  "markdown-preview-github-styles.colorTheme": "light",
  "markdown-preview-github-styles.lightTheme": "light_tritanopia",
  "markdown-preview-github-styles.darkTheme": "dark_dimmed",

  // Custom CSS and JS
  "vscode_custom_css.imports": [
    "file:///Users/feng/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.3/dist/updateHandler.js"
  ],

  // Animations
  "animations.Enabled": true,
  "animations.CursorAnimation": true,
  "animations.Install-Method": "Custom CSS and JS",
  // 其他动画就没必要啦，太花里胡哨
  "animations.Scrolling": "None",
  "animations.Active": "None",
  "animations.Tabs": "None",
  "animations.Command-Palette": "None",
  "animations.Focus-Dimming-Mode": "None",
  "animations.Auto-Install": false,
  "animations.Smooth-Mode": false,
  "animations.Custom-CSS": false,
  "animations.Durations": {
    "Scrolling": 200
  },
  "animations.CursorAnimationOptions": {
    "Color": "#ffffff4f"
  },

  // Comment Anchors
  "commentAnchors.tags.anchors": {
    "BUG": {
      "isBold": false,
      "iconColor": "red",
      "highlightColor": "#F44336",
      "scope": "workspace"
    },
    "TODO": {
      "isBold": false,
      "iconColor": "red",
      "highlightColor": "#3ea8ff",
      "scope": "workspace"
    },
    "FIXME": {
      "isBold": false,
      "iconColor": "red",
      "highlightColor": "#F44336",
      "scope": "workspace"
    },
    "REVIEW": {
      "isBold": false,
      "iconColor": "orange",
      "highlightColor": "#FFB300",
      "scope": "workspace"
    },
    "NOTE": {
      "isBold": false,
      "iconColor": "green",
      "highlightColor": "#2ecc71",
      "scope": "file"
    },
    "DONE": {
      "isBold": false,
      "iconColor": "green",
      "highlightColor": "#2ecc71",
      "scope": "file"
    }
  },

  // Code Spell Checker
  "cSpell.enableFiletypes": ["vimrc"],
  "cSpell.userWords": [
    "antfu",
    "astro",
    "asvetliakov",
    "autofetch",
    "axios",
    "bilibili",
    "Callout",
    "catppuccin",
    "clipboardy",
    "Codegeex",
    "codeium",
    "cofounder",
    "colour",
    "composables",
    "concat",
    "daisyui",
    "douyin",
    "Downie",
    "easymotion",
    "esno",
    "Evondev",
    "excalidraw",
    "feng",
    "fengstats",
    "filesize",
    "Fira",
    "fittencode",
    "flvjs",
    "foldfix",
    "fonted",
    "fullscreen",
    "Gitee",
    "Grammarly",
    "highlightedyank",
    "hlsearch",
    "iconfont",
    "IINA",
    "incsearch",
    "Innei",
    "juejin",
    "karabiner",
    "Keka",
    "Kirbyson",
    "lcpr",
    "leetcode",
    "Liga",
    "Logi",
    "macwk",
    "matchit",
    "MBTI",
    "Moegi",
    "mysqld",
    "naiveui",
    "Navicat",
    "neovim",
    "nestjs",
    "nums",
    "nuxt",
    "nuxtjs",
    "nvim",
    "peachpuff",
    "picgo",
    "pinia",
    "powermode",
    "PTSD",
    "Raycast",
    "rgba",
    "Rubick",
    "Shanns",
    "Shikiji",
    "Snipaste",
    "Sonoma",
    "soundmark",
    "streamurl",
    "strs",
    "SVIP",
    "tabao",
    "tailwindcss",
    "Taze",
    "tencent",
    "timi",
    "unocss",
    "unplugin",
    "utools",
    "Vimium",
    "vimrc",
    "Vite",
    "Vitesse",
    "vscodevim",
    "vueuse",
    "webrtc",
    "wechat",
    "weibo",
    "Windi",
    "xattr",
    "yuque",
    "zhihu",
    "zimfw",
    "zimrc",
    "zmodule",
    "Zolplay"
  ],

  // ErrorLens
  "errorLens.enabledDiagnosticLevels": ["error", "warning", "info"],
  "errorLens.excludeBySource": ["cSpell", "Grammarly"],

  // Translate
  "commentTranslate.hover.string": true,
  "commentTranslate.hover.enabled": true,
  "commentTranslate.hover.variable": true,
  "commentTranslate.multiLineMerge": true,
  "commentTranslate.hover.content": false,
  "commentTranslate.maxTranslationLength": 1000,
  "commentTranslate.targetLanguage": "zh-CN",
  "commentTranslate.source": "Kaiqun.tencent-cloud-translate-tencentCloud",

  // LeetCode
  "leetcode.endpoint": "leetcode-cn",
  "leetcode.defaultLanguage": "typescript",
  "leetcode.workspaceFolder": "/Users/feng/codebase/public/leetcode",
  "leetcode.hint.commandShortcut": false,
  "leetcode.hint.commentDescription": false,
  "leetcode.hint.configWebviewMarkdown": false,

  // File Nesting
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 2024/5/16 22:31:53",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).scss, $(capture).module.scss",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs"
  },

  // Extensions
  "gotoAlias.closeDts": true,
  "fnMap.registrationCode": "flm7F9uEfVXhX8rtQpZ3kGRm9UE/Bb5Nj2t/q5msz4tQqR7WrbFDnhdtuCOUQ7DFYLSKCqh7oNqylVWdoXsiNpZo112c1KWI7U8Y+hehQmYpQbdaylIdyBbVb+gvhJ3x774vaJ7327UzyoqBlC54x+HQREYOJsdUbWKSdQ67/0sFtZL+6aumQEDJObPqQDuxQHQbT1pAjz15FnsEGADsThjgAg+toQ8TJtFx0f5cU4E+twFRpIS1O4td8OpwJDxm0OcEMfFRHsw3JzmrxxNITTRPv3lHiWr9CBMYYm0HBL61je7veCMrwDoRv9jgoTJYy1Ds7JKkqVEKK8pKe8Ez9Q==",
  "timeline.pageOnScroll": true,
  "extensions.ignoreRecommendations": true,
  "extensions.experimental.affinity": {
    "cuixiaorui.cvim": 1,
    "BrandonKirbyson.vscode-animations": 2,
    "drcika.apc-extension": 2,
    "be5invis.vscode-custom-css": 2
    // "vscodevim.vim": 1,
    // "asvetliakov.vscode-neovim": 2
  }
}
