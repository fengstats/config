{
  // file begin
  "files.autoSaveDelay": 100,
  // 文件内容以什么结尾
  "files.eol": "\n",
  // file end

  // explorer begin（资源管理器）
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  // explorer end

  // window begin（窗口）
  // 是否使用原生标签页
  "window.nativeTabs": false,
  // 整体编辑器缩放比例
  "window.zoomLevel": 0.5,
  "window.titleBarStyle": "custom",
  // 搜索项居中
  "window.commandCenter": true,
  // 对话框外观
  "window.dialogStyle": "custom",
  // "window.experimental.useSandbox": true,
  "window.newWindowDimensions": "offset",
  // 是否开启主题自动切换（白天/黑夜）
  "window.autoDetectColorScheme": false,
  // window end

  // workbench begin（工作区）
  // 主题样式
  "workbench.colorTheme": "Vitesse Dark",
  // 文件图标样式
  "workbench.iconTheme": "vscode-icons",
  // "workbench.iconTheme": "file-icons",
  // 活动栏的图标
  "workbench.productIconTheme": "icons-carbon",
  // 夜晚使用的主题
  "workbench.preferredDarkColorTheme": "Vitesse Dark",
  // 白天使用的主题
  "workbench.preferredLightColorTheme": "Vitesse Dark",
  // "workbench.preferredLightColorTheme": "One Dark Pro Darker",
  // "workbench.preferredLightColorTheme": "Ayu Mojave",
  "workbench.editor.closeOnFileDelete": true,
  // tab 的 x 按钮
  "workbench.editor.tabCloseButton": "off",
  "workbench.editor.limit.enabled": true,
  "workbench.editor.wrapTabs": true,
  "workbench.editor.limit.perEditorGroup": true,
  // 设置最大显示 tab title 的个数
  // "workbench.editor.limit.value": 5,
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 10,
  "workbench.list.smoothScrolling": true,
  "workbench.startupEditor": "newUntitledFile",
  // 自定义主题样式
  "workbench.colorCustomizations": {
    "[Vitesse Dark]": {
      // active: 活动状态 | inactive 非活动状态
      // 顶部窗口
      // 字体颜色
      "titleBar.activeForeground": "#c1c1c1",
      "titleBar.inactiveForeground": "#c1c1c1",
      // 背景颜色
      "titleBar.activeBackground": "#1a1d22",
      "titleBar.inactiveBackground": "#1a1d22",
      // 底部边框
      "titleBar.border": "#abbcab5f",

      // 活动栏
      // 背景颜色（显示图标的侧边栏）
      // "activityBar.background": "#111318",
      "activityBar.background": "#1a1d22",

      // 图标激活颜色
      "activityBar.foreground": "#abbcab",
      // 图标默认颜色
      "activityBar.inactiveForeground": "#abbcab65",

      // 侧边栏
      // 背景颜色
      "sideBar.background": "#111318",
      // 一级菜单背景颜色
      "sideBarSectionHeader.background": "#111318",
      // 鼠标悬浮背景颜色
      "list.hoverBackground": "#abbcab35",
      // "list.inactiveSelectionBackground": "",
      // 当前选中的列表背景颜色
      "list.activeSelectionBackground": "#abbcab35",
      // 当前键盘聚焦所在列表背景颜色
      "list.focusBackground": "#abbcab45",

      // 标签
      // 未激活选项卡背景颜色
      "tab.inactiveBackground": "#202020",
      // 激活选项卡背景颜色
      "tab.activeBackground": "#111111",
      // 激活选项卡底部边框
      "tab.activeBorder": "#abbcab",
      // 选项卡时编辑器组标题的背景颜色
      "editorGroupHeader.tabsBackground": "#1a1d22",

      // 编辑器
      // 背景颜色
      "editor.background": "#1a1d22",
      // 选中片段背景
      "editor.selectionBackground": "#abbcab65",
      // 选中片段对应该文中一致的内容高亮背景
      "editor.selectionHighlightBackground": "#abbcab35",
      "editor.foldBackground": "#eeeeee10",
      // 小组件背景颜色（查找、替换、提示）
      "editorWidget.background": "#121212",

      // 编辑器行号（当前行、其他 行）
      "editorLineNumber.foreground": "#bfbaaa90",
      "editorLineNumber.activeForeground": "#dedcd5",

      // 面板（测试了下貌似会影响到终端颜色, 终端不设置的前提下）:
      // "panel.background": "#1a1d22",
      "panel.background": "#13151b",
      "panel.border": "#abbcab50",

      // 终端
      // 选择背景色
      "terminal.selectionBackground": "#d1d1d130",

      // 其他
      // git 忽略文件字体颜色
      "gitDecoration.ignoredResourceForeground": "#dedcd558"
    }
    // "[-Moegi Dark]": {
    //   // 顶部
    //   "titleBar.activeBackground": "#222222",
    //   "titleBar.inactiveBackground": "#222222",
    //   // 活动栏
    //   "activityBar.background": "#222222",
    //   // 侧边栏
    //   "sideBar.background": "#242526",
    //   // 标签
    //   "editorGroupHeader.tabsBackground": "#252525",
    //   // 编辑器
    //   "editor.background": "#292a2c",
    //   // 面板
    //   "panel.background": "#292a2c",
    //   // 终端
    //   "terminal.background": "#292a2c"
    // }
  },
  // workbench end

  // editor begin（代码编辑区）
  "editor.tabSize": 2,
  "editor.fontSize": 13,
  // 行高
  "editor.lineHeight": 1.6,
  // 不设置字体的话貌似用的是系统默认字体捏
  // "editor.fontFamily": "Smiley Sans",
  // "editor.fontFamily": "Input Mono",
  "editor.fontFamily": "JetBrains Mono",
  // "editor.fontFamily": "Input Mono, Fira Code, monospace",
  // "editor.fontWeight": 400,
  // 小地图显示大小设置
  "editor.minimap.size": "proportional",
  // 编辑器格式保存
  "editor.formatOnSave": true,
  // 代码格式化指定
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // 行号显示
  // "editor.lineNumbers": "relative",
  "editor.lineNumbers": "on",
  "editor.detectIndentation": false,
  "editor.accessibilitySupport": "off",
  // 突出当前行高亮方式
  "editor.renderLineHighlight": "all",
  // 使光标更加丝滑的移动
  "editor.cursorSmoothCaretAnimation": "on",
  // 光标闪烁动画
  "editor.cursorBlinking": "blink",
  "editor.smoothScrolling": true,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
  // "editor.fontLigatures": true,
  "editor.glyphMargin": true,
  "editor.guides.bracketPairs": "active",
  "editor.inlineSuggest.enabled": true,
  // 使用 command 替换 alt/option 的多光标模式
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.renderWhitespace": "all",
  "editor.suggestSelection": "first",
  "editor.unicodeHighlight.invisibleCharacters": false,
  // 括号着色
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  // 是否开启粘性滚动
  "editor.stickyScroll.enabled": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": false,
    // 允许 ESlint 在保存时自动修复
    "source.fixAll.eslint": true
  },
  // 自定义代码编辑区内容
  "editor.tokenColorCustomizations": {
    "[Vitesse Dark]": {
      // 注释颜色更改
      "comments": "#9eaa9e"
    },
    "[Ayu Mojave]": {
      "comments": "#a2aaa2"
    },
    "[One Dark Pro Darker]": {
      "comments": "#a2aaa2"
    },
    "[Moegi Dark Vitesse]": {
      "comments": "#a1a7a1"
    },
    "[GitHub Dark Dimmed]": {
      "comments": "#adb5ad"
    },
    "[Panda Syntax]": {
      "comments": "#adb5ad"
    },
    "[Moegi Dark]": {
      // "comments": "#a0ada0"
      "comments": "#adb5ad"
      // 调整关键字样式
      // "textMateRules": [
      //   {
      //     "name": "Keyword Bold",
      //     "scope": ["keyword", "storage.type", "storage.modifier"],
      //     "settings": {
      //       "fontStyle": "bold"
      //     }
      //   }
      // ]
    },
    // 斜体注释矫正
    "textMateRules": [
      {
        "name": "Comments",
        "scope": "comment, punctuation.definition.comment",
        "settings": {
          "fontStyle": ""
        }
      },
      {
        "name": "js/ts italic",
        "scope": "entity.other.attribute-name.js,entity.other.attribute-name.ts,entity.other.attribute-name.jsx,entity.other.attribute-name.tsx,variable.parameter,variable.language.super",
        "settings": {
          "fontStyle": ""
        }
      },
      {
        "name": "js ts this",
        "scope": "var.this,variable.language.this.js,variable.language.this.ts,variable.language.this.jsx,variable.language.this.tsx",
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "diffEditor.ignoreTrimWhitespace": false,
  // editor end

  // terminal begin（终端）
  // 定义在 macOS 上运行的终端应用程序
  // "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.fontSize": 13,
  // 终端字体, 不设置的话默认使用编辑器字体
  // "terminal.integrated.fontFamily": "Input Mono, Hack Nerd Font Mono, monospace",
  "terminal.integrated.fontFamily": "JetBrains Mono, Hack Nerd Font Mono,monospace",
  "terminal.integrated.lineHeight": 0,
  "terminal.integrated.letterSpacing": 0,
  "terminal.integrated.gpuAcceleration": "off",
  "terminal.integrated.fontWeightBold": "normal",
  // 光标宽度设置
  // "terminal.integrated.cursorWidth": 1,
  "terminal.integrated.cursorStyle": "line",
  // 控制光标是否闪烁
  // fixme: 我的终端仍然是不闪烁状态 | 排查后发现是 zsh-vi-mode 的问题
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.fontWeight": "300",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.tabs.location": "right",
  // terminal end

  // vim begin
  // 设置 <leader> 为空格
  "vim.leader": "<space>",
  // <leader><leader> s <char>: 全文搜索字符
  // <leader><leader> f <char>: 当前光标往下搜索
  "vim.easymotion": false,
  // 使用系统剪切板 cv -> yp
  "vim.useSystemClipboard": true,
  "vim.incsearch": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.surround": true,
  "vim.sneak": true,
  // 设置 vim 不接管某些快捷键
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    // 作为以为合格的 cv 工程师的, 主力按键怎么能被 vim 接管, 达咩！
    "<C-c>": false,
    "<C-v>": false
  },
  // 插入模式下按键功能映射
  "vim.insertModeKeyBindings": [],
  "vim.visualModeKeyBindingsNonRecursive": [
    // 其实就是用了个小技巧让我们在可视模式下粘贴时寄存器内数据保持一致:
    // 一般来说如果在可视模式选中后 p 操作会将 p 所覆盖的东西复制到寄存器中, 导致后续再 p 就不是我们想粘贴的内容了
    // 这里在 p 后执行 gv（选中粘贴的数据）并 y（复制）
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    // 行首/行尾移动
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["g", "_"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // 标签区 | Tab

    // 编辑区 | Editor

    // 终端区 | Terminal

    // 解决自动换行后进行光标移动一次跳过多行的问题
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    // 控制光标向上/下滚动指定行 | 并顺便调整到屏幕中间
    {
      "before": ["K"],
      "after": ["8", "g", "k", "z", "z"]
    },
    {
      "before": ["J"],
      "after": ["8", "g", "j", "z", "z"]
    },
    // n/N vim 查找后上下匹配项切换 | 并调整显示行为屏幕中心
    {
      "before": ["n"],
      "after": ["n", "z", "z"]
    },
    {
      "before": ["N"],
      "after": ["N", "z", "z"]
    },
    // u 的 redo 操作
    {
      "before": ["U"],
      "after": ["<c-r>"]
    },
    // 右/下分屏
    {
      "before": ["s", "l", ";"],
      "commands": [":vsplit"]
    },
    {
      "before": ["s", "j", ";"],
      "commands": [":split"]
    },
    // 返回上一次操作的位置
    {
      "before": ["g", "k"],
      // "commands": ["workbench.action.navigateBack"]
      "after": ["<c-o>"]
    },
    // gk 的 redo
    {
      "before": ["g", "j"],
      // "commands": ["workbench.action.navigateBack"]
      "after": ["<c-i>"]
    },
    // 行首/行尾移动
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["g", "_"]
    },
    // tab 标签左右切换: 注意若遇到软件设置/插件说明等 tab 标签时, 无效, 可用系统快捷键 cmd + shift + [] 切换
    // {
    //   "before": ["H"],
    //   "commands": ["workbench.action.previousEditor"]
    // },
    // {
    //   "before": ["L"],
    //   "commands": ["workbench.action.nextEditor"]
    // },
    // 侧边栏的显示和隐藏的快捷键 | explorer
    {
      "before": ["leader", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    // 创建文件
    {
      "before": ["leader", "a"],
      "commands": ["explorer.newFile"]
    },
    // 创建文件夹
    {
      "before": ["leader", "A"],
      "commands": ["explorer.newFolder"]
    },
    // 保存但不格式化
    {
      "before": ["leader", "w"],
      "commands": ["workbench.action.files.saveWithoutFormatting"]
    },
    // 取消查找后的光标高亮
    {
      "before": ["leader", ";"],
      "commands": [":noh"]
    },
    // 光标由 editor 聚焦至 terminal
    {
      "before": ["leader", "t"],
      "commands": ["workbench.action.terminal.focus"]
    },
    // 保存文件
    {
      "before": ["leader", "s"],
      "commands": [":w"]
    },
    // 退出文件
    {
      "before": ["leader", "q"],
      "commands": [":q"]
    },
    {
      "before": ["Q"],
      "commands": [":q"]
    },
    // 进入定义文件位置中
    {
      "before": ["leader", "f"],
      "after": ["g", "f"]
    }
    // 光标跳转到前面的函数开始处 | 如果光标在函数体内, 那就是该函数的开始处
    // {
    //   "before": ["leader", "["],
    //   "after": ["[", "{"]
    // },
  ],
  // vim keep english in normal（中文切换到普通/NORMAL模式时自动变成英文输入）
  // 是否启用自动切换
  // tip: 目前通过 Rime 的配置方案解决了
  // bug: 使用操作符 (如：ciw），删除当前光标所在单词并进入 INSERT 模式, 此时光标应该从方块变成细条光束, 但结果仍然保持方块, 直到再次输入字符时光标才会切换为细条光束
  // 对于我来说, 光标状态的显示是我判断模式的根本, 如果光标状态与模式不同时, 可能会产生一些错误的命令输入, 体验上来说就很不友好
  "vim.autoSwitchInputMethod.enable": false,
  // normal 模式下需要切换的输入法
  "vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.ABC",
  // 获取当前输入法的命令
  "vim.autoSwitchInputMethod.obtainIMCmd": "/usr/local/bin/im-select",
  // 切换输入法的命令，{im} 代表要切换的输入法名称（其实就是设置的 defaultIM）
  "vim.autoSwitchInputMethod.switchIMCmd": "/usr/local/bin/im-select {im}",
  // vim end

  // git begin
  "git.confirmSync": false,
  "git.ignoreRebaseWarning": true,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  // git end

  // better comments
  "better-comments.tags": [
    // todo: 表示一些未完成的功能/事情
    {
      "tag": "todo",
      "color": "#000",
      "backgroundColor": "#dfe6e9"
    },
    // fixme: 修复我, 表示已经实现但不完美的功能/需要修复
    {
      "tag": "fixme",
      "color": "#fff",
      "backgroundColor": "#ff4757"
    },
    // tip: 功能提示
    {
      "tag": "tip",
      "color": "#000",
      "backgroundColor": "#2faf64"
    },
    // note: 一般用于比较难理解的代码/功能, 添加描述
    {
      "tag": "note",
      "color": "#000",
      "backgroundColor": "#3498db"
    },
    // hack: 表示一个功能虽然实现, 但是后续可能会存在问题
    {
      "tag": "hack",
      "color": "#000",
      "backgroundColor": "#fa973a"
    },
    // bug: 表示一个功能存在问题
    {
      "tag": "bug",
      "color": "#fff",
      "backgroundColor": "#ff4757"
    }
  ],

  // errorLens begin
  "errorLens.fontFamily": "JetBrains Mono",
  // 是否使用斜体
  // "errorLens.fontStyleItalic": true,
  "errorLens.fontWeight": "500",
  "errorLens.margin": "20px",
  "errorLens.messageTemplate": "$severity：$message ($source) $count",
  "errorLens.removeLinebreaks": false,
  "errorLens.gutterIconsFollowCursorOverride": false,
  // 启用的错误提示等级
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],
  // errorLens end

  // prettier begin
  "prettier.printWidth": 100,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  // prettier end

  // eslint begin
  // "eslint.validate": ["javascript"],
  // "eslint.options": {
  //   // 指定全局配置文件, 会覆盖优先于本地配置
  //   "overrideConfigFile": "/Users/feng/.vscode/.eslintrc.js"
  // },
  // "eslint.format.enable": true,
  // "eslint.quiet": true,
  // "eslint.alwaysShowStatus": true,
  // eslint end

  // js begin
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // 是否开启语法校验检查
  "js/ts.implicitProjectConfig.checkJs": true,
  // js end

  // css begin
  // less 转换为 css
  "less.compile": {
    "outExt": ".css"
  },
  // px 转换为 vw 单位
  "px-to-vw.viewportWidth": 375,
  "px-to-vw.unitPrecision": 2,
  // css end

  // paramHints begin
  "javascript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "editor.inlayHints.enabled": "onUnlessPressed",
  // paramHint end

  // other begin
  "search.smartCase": true,
  // 全局搜索时排除掉一些指定目录 | 提升检索速度
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },
  "docker.images.label": "Tag",
  "vsicons.dontShowNewVersionMessage": true,
  "security.workspace.trust.untrustedFiles": "open",
  "vetur.validation.template": false,
  "explorer.fileNesting.enabled": false,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 2023/3/13 01:15:31",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js ",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "powermode.enabled": false,
  "powermode.shake.intensity": 0,
  "commentTranslate.hover.string": true,
  "commentTranslate.hover.variable": true,
  "commentTranslate.hover.enabled": false,
  "commentTranslate.hover.content": false,
  "tabnine.experimentalAutoImports": true,
  "cSpell.userWords": ["colour", "easymotion", "peachpuff", "Vitesse", "zimfw", "zmodule"]
  // other end
}
