{
  // file begin
  "files.autoSaveDelay": 100,
  // 文件内容以什么结尾
  "files.eol": "\n",
  // file end

  // explorer begin（资源管理器）
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  // explorer end

  // window begin（窗口）
  // todo：没体会到作用在哪
  "window.nativeTabs": false,
  // 缩放比例
  "window.zoomLevel": 0.4,
  "window.titleBarStyle": "custom",
  // 搜索项居中
  "window.commandCenter": true,
  // 对话框外观
  "window.dialogStyle": "custom",
  // "window.experimental.useSandbox": true,
  "window.newWindowDimensions": "offset",
  // 是否开启主题自动切换（白天/黑夜）
  "window.autoDetectColorScheme": false,
  // window end

  // workbench begin（工作区）
  // 主题样式
  "workbench.colorTheme": "Moegi Dark",
  // 文件图标样式
  "workbench.iconTheme": "vscode-icons",
  // "workbench.iconTheme": "file-icons",
  // 活动栏的图标
  "workbench.productIconTheme": "icons-carbon",
  // 夜晚使用的主题
  "workbench.preferredDarkColorTheme": "Vitesse Dark",
  // 白天使用的主题
  "workbench.preferredLightColorTheme": "Vitesse Dark",
  // "workbench.preferredLightColorTheme": "One Dark Pro Darker",
  // "workbench.preferredLightColorTheme": "Ayu Mojave",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.tabCloseButton": "right",
  "workbench.editor.limit.enabled": true,
  "workbench.editor.wrapTabs": true,
  "workbench.editor.limit.perEditorGroup": true,
  // 设置最大显示 tab title 的个数
  // "workbench.editor.limit.value": 5,
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 10,
  "workbench.list.smoothScrolling": true,
  "workbench.startupEditor": "newUntitledFile",
  // 自定义主题样式
  "workbench.colorCustomizations": {
    "[Vitesse Dark]": {
      // git 忽略文件字体颜色
      "gitDecoration.ignoredResourceForeground": "#dedcd558",

      // 顶部导航条
      // 字体颜色（激活/未激活）
      "titleBar.activeForeground": "#c1c1c1",
      "titleBar.inactiveForeground": "#c1c1c1",
      // 背景颜色（激活/未激活）
      "titleBar.activeBackground": "#1a1d22",
      "titleBar.inactiveBackground": "#1a1d22",
      // 底部边框
      "titleBar.border": "#abbcab50",

      // 活动栏
      // 背景颜色（显示图标的侧边栏）
      // "activityBar.background": "#111318",
      "activityBar.background": "#1a1d22",

      // 图标激活颜色
      "activityBar.foreground": "#abbcab",
      // 图标默认颜色
      "activityBar.inactiveForeground": "#abbcab65",

      // 侧边栏
      // 背景颜色
      "sideBar.background": "#111318",
      // 一级菜单背景颜色
      "sideBarSectionHeader.background": "#111318",
      // 鼠标悬浮背景颜色
      "list.hoverBackground": "#abbcab35",
      // "list.inactiveSelectionBackground": "",
      // 当前选中的列表背景颜色
      "list.activeSelectionBackground": "#abbcab35",
      // 当前键盘聚焦所在列表背景颜色
      "list.focusBackground": "#abbcab45",

      // 标签
      // 未激活选项卡背景颜色
      "tab.inactiveBackground": "#202020",
      // 激活选项卡背景颜色
      "tab.activeBackground": "#111111",
      // 激活选项卡底部边框
      "tab.activeBorder": "#abbcab",
      // 选项卡时编辑器组标题的背景颜色
      "editorGroupHeader.tabsBackground": "#1a1d22",

      // 编辑器
      // 背景颜色
      "editor.background": "#1a1d22",
      // 选中片段背景
      "editor.selectionBackground": "#abbcab65",
      // 选中片段对应该文中一致的内容高亮背景
      "editor.selectionHighlightBackground": "#abbcab35",
      "editor.foldBackground": "#eeeeee10",
      // 小组件背景颜色（查找、替换、提示）
      "editorWidget.background": "#121212",

      // 编辑器行号（当前行、其他行）
      "editorLineNumber.foreground": "#bfbaaa90",
      "editorLineNumber.activeForeground": "#dedcd5",

      // 面板（测试了下貌似会影响到终端颜色，终端不设置的前提下）：
      // "panel.background": "#1a1d22",
      "panel.background": "#13151b",
      "panel.border": "#abbcab50",

      // 终端
      // 选择背景色
      "terminal.selectionBackground": "#d1d1d130"
    },
    "[Moegi Dark1]": {
      // 顶部
      "titleBar.activeBackground": "#222222",
      "titleBar.inactiveBackground": "#222222",
      // 活动栏
      "activityBar.background": "#222222",
      // 侧边栏
      "sideBar.background": "#242526",
      // 标签
      "editorGroupHeader.tabsBackground": "#252525",
      // 编辑器
      "editor.background": "#292a2c",
      // 面板
      "panel.background": "#292a2c",
      // 终端
      "terminal.background": "#292a2c"
    }
  },
  // workbench end

  // editor begin（代码编辑区）
  "editor.tabSize": 2,
  "editor.fontSize": 13.5,
  // 行高
  "editor.lineHeight": 21,
  // 不设置字体的话貌似用的是系统默认字体捏
  // "editor.fontFamily": "Smiley Sans",
  // "editor.fontFamily": "Input Mono",
  "editor.fontFamily": "JetBrains Mono",
  // "editor.fontFamily": "Input Mono, Fira Code, monospace",
  // "editor.fontWeight": 400,
  // 小地图显示大小设置
  "editor.minimap.size": "proportional",
  // 编辑器格式保存
  "editor.formatOnSave": true,
  // 代码格式化指定
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // 行号显示
  // "editor.lineNumbers": "relative",
  "editor.lineNumbers": "on",
  "editor.detectIndentation": false,
  "editor.accessibilitySupport": "off",
  // 使光标更加丝滑的移动
  "editor.cursorSmoothCaretAnimation": "on",
  // 光标闪烁动画
  "editor.cursorBlinking": "blink",
  "editor.smoothScrolling": true,
  "editor.find.addExtraSpaceOnTop": false,
  // 挖槽，这个配置太帅了，我感觉字体细节直接拿捏了，antfu 大佬牛皮
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
  // "editor.fontLigatures": true,
  "editor.glyphMargin": true,
  "editor.guides.bracketPairs": "active",
  "editor.inlineSuggest.enabled": true,
  // 使用 command 替换 alt/option 的多光标模式
  // "editor.multiCursorModifier": "ctrlCmd",
  "editor.renderWhitespace": "all",
  "editor.suggestSelection": "first",
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.renderLineHighlight": "none",
  // 括号着色
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  // 是否开启粘性滚动
  "editor.stickyScroll.enabled": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": false,
    // this allows ESLint to auto fix on save
    "source.fixAll.eslint": true
  },
  // 自定义代码编辑区内容
  "editor.tokenColorCustomizations": {
    "[Vitesse Dark]": {
      // 注释颜色更改
      "comments": "#9eaa9e"
    },
    "[Ayu Mojave]": {
      "comments": "#a2aaa2"
    },
    "[One Dark Pro Darker]": {
      "comments": "#a2aaa2"
    },
    "[Moegi Dark]": {
      // "comments": "#a0ada0"
      "comments": "#adb5ad"
      // 设置关键字样式
      // "textMateRules": [
      //   {
      //     "name": "Keyword Bold",
      //     "scope": ["keyword", "storage.type", "storage.modifier"],
      //     "settings": {
      //       "fontStyle": "bold"
      //     }
      //   }
      // ]
    },
    "[Moegi Dark Vitesse]": {
      "comments": "#a1a7a1"
    },
    "[GitHub Dark Dimmed]": {
      "comments": "#adb5ad"
    },
    "[Panda Syntax]": {
      "comments": "#adb5ad"
    },
    // 斜体注释矫正
    "textMateRules": [
      {
        "name": "Comments",
        "scope": "comment, punctuation.definition.comment",
        "settings": {
          "fontStyle": ""
        }
      },
      {
        "name": "js/ts italic",
        "scope": "entity.other.attribute-name.js,entity.other.attribute-name.ts,entity.other.attribute-name.jsx,entity.other.attribute-name.tsx,variable.parameter,variable.language.super",
        "settings": {
          "fontStyle": ""
        }
      },
      {
        "name": "js ts this",
        "scope": "var.this,variable.language.this.js,variable.language.this.ts,variable.language.this.jsx,variable.language.this.tsx",
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "diffEditor.ignoreTrimWhitespace": false,
  // editor end

  // terminal begin（终端）
  "terminal.integrated.fontSize": 13.5,
  // 终端字体，不设置的话默认使用编辑器字体
  // "terminal.integrated.fontFamily": "Input Mono, Hack Nerd Font Mono, monospace",
  "terminal.integrated.fontFamily": "JetBrains Mono, Hack Nerd Font Mono,monospace",
  "terminal.integrated.lineHeight": 0,
  "terminal.integrated.letterSpacing": 0,
  "terminal.integrated.gpuAcceleration": "off",
  "terminal.integrated.fontWeightBold": "normal",
  // 光标宽度设置
  // "terminal.integrated.cursorWidth": 1,
  "terminal.integrated.cursorStyle": "line",
  // 控制光标是否闪烁（todo：不知道为啥设置了开启，我的终端仍然是不闪烁状态）
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.fontWeight": "300",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.tabs.location": "right",
  // terminal end

  // vim begin
  // 设置 <leader> 为空格
  "vim.leader": "<space>",
  "vim.easymotion": true,
  // easymotion（这里的 <leader> 就是 空格）
  // <leader><leader> s <char>：全文搜索字符
  // <leader><leader> f <char>：当前光标往下搜索
  "vim.useSystemClipboard": true,
  "vim.incsearch": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.sneak": true,
  // 插入模式按键功能赋值，before 赋值 after
  "vim.insertModeKeyBindings": [
    // 先把这个配置项去掉了,我发现我现在过于依赖jj切换普通模式导致在其它地方写代码的时候也会有所影响,改一下
    // 后续补充: 我放弃了,哈哈哈哈,我认为jj确实挺好用的
    // 我又来了（220901）：希望这次我可以坚持久一点，不那么依赖于 jj
    // {
    //   "before": ["j", "j"],
    //   "after": ["<Esc>"]
    // }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // 光标跳转到前面的函数开始处（如果光标在函数体内，那就是该函数的开始处）
    {
      "before": ["<leader>", "["],
      "after": ["[", "{"]
    },
    // editor 更改一些变量名时使用，同步修改该文件内所有使用该变量名的地方
    // todo：上面是我之前写的注释，测试了一下貌似好像也改不了全局的配置...后面有空在研究看看
    // {
    //   "before": ["<leader>", "r"],
    //   "commands": ["editor.action.rename"]
    // },
    // 取消查找后的光标高亮
    // tip: <CR> 是回车键
    {
      "before": ["<leader>", "<CR>"],
      "commands": [":nohl"]
    },
    // {
    //   "before": ["<C-n>"],
    //   "commands": [":nohl"]
    // },
    // {
    //   "before": [";", "f"],
    //   "commands": [":nohlsearch"]
    // },
    // 光标由 editor 聚焦至 terminal
    {
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.terminal.focus"]
    },
    // 右下分屏
    {
      "before": ["s", "l", "<CR>"],
      "commands": [":vsplit"]
    },
    {
      "before": ["s", "j", "<CR>"],
      "commands": [":split"]
    },
    // tip: 这里的聚焦移动到了 keybindings.json 中了
    // 聚焦上/下一个编辑组
    // {
    //   // "before": ["<leader>", "k"],
    //   "before": ["<C-k>"],
    //   "commands": ["workbench.action.focusPreviousGroup"]
    // },
    // {
    //   "before": ["<C-j>"],
    //   "commands": ["workbench.action.focusNextGroup"]
    // },
    // 聚焦左/右编辑组
    // {
    //   "before": ["<C-h>"],
    //   "commands": ["workbench.action.focusLeftGroup"]
    // },
    // {
    //   "before": ["<C-l>"],
    //   "commands": ["workbench.action.focusRightGroup"]
    // },
    // 新建文件
    {
      "before": ["t", "u"],
      "commands": [":tabe"]
    },
    // 保存文件
    // todo: S 与 vim-surround 触发按键冲突，先选择其他方案吧（或许直接 cmd+s 也挺好？）
    // {
    //   "before": ["S"],
    //   // "commands": [":w!"]
    //   "commands": ["workbench.action.files.save"]
    // },
    {
      "before": ["<leader>", "s"],
      // "commands": [":w!"]
      "commands": ["workbench.action.files.save"]
    },
    // 退出文件
    {
      "before": ["Q"],
      "commands": [":q"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": [":q"]
    },
    // 返回上一次操作的位置
    {
      "before": ["g", "k"],
      // "commands": ["workbench.action.navigateBack"]
      "after": ["<C-o>"]
    },
    // 返回上一次操作的位置之后再返回原位置
    {
      "before": ["g", "j"],
      // "commands": ["workbench.action.navigateBack"]
      "after": ["<C-i>"]
    },
    // 进入定义文件位置中
    {
      "before": ["<leader>", "f"],
      "after": ["g", "f"]
    },
    // 切换到上一个 tab
    {
      "before": ["E"],
      "after": ["g", "T"]
    },
    // 切换到下一个 tab
    {
      "before": ["R"],
      "after": ["g", "t"]
    },
    // {
    //   "before": ["<leader>", "sq"],
    //   "commands": [":wq!"]
    // },
    // {
    //   "before": ["<leader>", "d"],
    //   "after": ["d", "d"]
    // },
    // 行首
    // tip：貌似配合操作符会有点问题
    {
      "before": ["H"],
      "after": ["^"]
    },
    // 行尾
    {
      "before": ["L"],
      "after": ["g", "_"]
    },
    // 屏幕向下滚动指定行
    {
      "before": ["J"],
      // 屏幕向下滚动半屏
      // "after": ["<C-d>"]
      "after": ["5", "j"]
    },
    // 屏幕向上滚动指定行
    {
      "before": ["K"],
      // 屏幕向上滚动半屏
      // "after": ["<C-u>"]
      "after": ["5", "k"]
    }
  ],
  "vim.handleKeys": {
    // 取消掉一些与 vscode 快捷键冲突的 Ctrl + a...
    "<C-a>": false,
    "<C-f>": true,
    "<C-b>": true,
    "<C-w>": false,
    "<C-d>": true,
    "<C-c>": false,
    "<C-v>": false
    // tip: 这个键被我用来替换 selectPrevSuggestion 了（输入几个单词后的 api 的智能提示向上走）
    // tip: 现在又用来聚焦上一个编辑组了hhh
    // "<C-k>": false
  },
  // vim keep english in normal（中文切换到普通模式时自动变成英文输入）
  // 是否启用自动切换
  // todo：目前发现了个小 bug，某个文件打开一段时间后使用 ciw 命令时，normal 模式的光标状态会带到 insert 模式下
  "vim.autoSwitchInputMethod.enable": true,
  // normal 模式下需要切换的输入法
  "vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.ABC",
  // 获取当前输入法的命令
  "vim.autoSwitchInputMethod.obtainIMCmd": "/usr/local/bin/im-select",
  // 切换输入法的命令，{im} 代表要切换的输入法名称（其实就是设置的 defaultIM）
  "vim.autoSwitchInputMethod.switchIMCmd": "/usr/local/bin/im-select {im}",
  // vim end

  // git begin
  "git.confirmSync": false,
  "git.ignoreRebaseWarning": true,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  // git end

  // todo tree begin
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]",
    "// todo",
    "// tip"
  ],
  // 设置 tag 对应标识信息
  "todo-tree.highlights.customHighlight": {
    "BUG": {
      "icon": "bug"
    },
    "HACK": {
      "icon": "tools"
    },
    "FIXME": {
      "icon": "flame"
    },
    "XXX": {
      "icon": "$(close)"
    }
  },
  // todo tree end

  // errorLens begin
  "errorLens.fontFamily": "JetBrains Mono",
  // "errorLens.borderRadius": "100px",
  // 是否使用斜体
  // "errorLens.fontStyleItalic": true,
  "errorLens.fontWeight": "500",
  "errorLens.margin": "20px",
  // "errorLens.messageBackgroundMode": "message",
  "errorLens.messageTemplate": "$severity：$message ($source) $count",
  // "errorLens.padding": "2px 10px",
  // "errorLens.statusBarMessageAlignment": "right",
  "errorLens.removeLinebreaks": false,
  "errorLens.gutterIconsFollowCursorOverride": false,
  // 启用的错误提示等级
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],
  // errorLens end

  // prettier begin
  "prettier.printWidth": 100,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  // prettier end

  // eslint begin
  // "eslint.validate": ["javascript"],
  // "eslint.options": {
  //   // tip: 指定全局配置文件，会覆盖优先于本地配置
  //   "overrideConfigFile": "/Users/feng/.vscode/.eslintrc.js"
  // },
  // "eslint.format.enable": true,
  // "eslint.quiet": true,
  // "eslint.alwaysShowStatus": true,
  // eslint end

  // js begin
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // 是否开启语法校验检查
  "js/ts.implicitProjectConfig.checkJs": true,
  // js end

  // css begin
  // less 转换为 css
  "less.compile": {
    "outExt": ".css"
  },
  // px 转换为 vw 单位
  "px-to-vw.viewportWidth": 375,
  "px-to-vw.unitPrecision": 2,
  // css end

  // paramHints begin
  "javascript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "editor.inlayHints.enabled": "onUnlessPressed",
  // paramHint end

  // other begin
  "search.smartCase": true,
  // 全局搜索时排除掉一些指定目录
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },
  "docker.images.label": "Tag",
  "vsicons.dontShowNewVersionMessage": true,
  "security.workspace.trust.untrustedFiles": "open",
  "vetur.validation.template": false,
  "explorer.fileNesting.enabled": false,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 2023/3/13 01:15:31",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js ",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "powermode.enabled": false,
  "powermode.shake.intensity": 0,
  "commentTranslate.hover.string": true,
  "commentTranslate.hover.variable": true,
  "commentTranslate.hover.enabled": false,
  "commentTranslate.hover.content": false,
  "tabnine.experimentalAutoImports": true,
  "cSpell.userWords": ["colour", "peachpuff"]
  // other end
}
